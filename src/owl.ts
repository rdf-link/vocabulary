const iri = "http://www.w3.org/2002/07/owl#";

export const OWL = {
  namespace: {
    iri,
    prefix: "owl",
  },
  AllDifferent: iri.concat("AllDifferent"),
  AllDisjointClasses: iri.concat("AllDisjointClasses"),
  AllDisjointProperties: iri.concat("AllDisjointProperties"),
  Annotation: iri.concat("Annotation"),
  AnnotationProperty: iri.concat("AnnotationProperty"),
  AsymmetricProperty: iri.concat("AsymmetricProperty"),
  Axiom: iri.concat("Axiom"),
  Class: iri.concat("Class"),
  DataRange: iri.concat("DataRange"),
  DatatypeProperty: iri.concat("DatatypeProperty"),
  DeprecatedClass: iri.concat("DeprecatedClass"),
  DeprecatedProperty: iri.concat("DeprecatedProperty"),
  FunctionalProperty: iri.concat("FunctionalProperty"),
  InverseFunctionalProperty: iri.concat("InverseFunctionalProperty"),
  IrreflexiveProperty: iri.concat("IrreflexiveProperty"),
  NamedIndividual: iri.concat("NamedIndividual"),
  NegativePropertyAssertion: iri.concat("NegativePropertyAssertion"),
  Nothing: iri.concat("Nothing"),
  ObjectProperty: iri.concat("ObjectProperty"),
  Ontology: iri.concat("Ontology"),
  OntologyProperty: iri.concat("OntologyProperty"),
  ReflexiveProperty: iri.concat("ReflexiveProperty"),
  Restriction: iri.concat("Restriction"),
  SymmetricProperty: iri.concat("SymmetricProperty"),
  Thing: iri.concat("Thing"),
  TransitiveProperty: iri.concat("TransitiveProperty"),
  allValuesFrom: iri.concat("allValuesFrom"),
  annotatedProperty: iri.concat("annotatedProperty"),
  annotatedSource: iri.concat("annotatedSource"),
  annotatedTarget: iri.concat("annotatedTarget"),
  assertionProperty: iri.concat("assertionProperty"),
  backwardCompatibleWith: iri.concat("backwardCompatibleWith"),
  bottomDataProperty: iri.concat("bottomDataProperty"),
  bottomObjectProperty: iri.concat("bottomObjectProperty"),
  cardinality: iri.concat("cardinality"),
  complementOf: iri.concat("complementOf"),
  datatypeComplementOf: iri.concat("datatypeComplementOf"),
  deprecated: iri.concat("deprecated"),
  differentFrom: iri.concat("differentFrom"),
  disjointUnionOf: iri.concat("disjointUnionOf"),
  disjointWith: iri.concat("disjointWith"),
  distinctMembers: iri.concat("distinctMembers"),
  equivalentClass: iri.concat("equivalentClass"),
  equivalentProperty: iri.concat("equivalentProperty"),
  hasKey: iri.concat("hasKey"),
  hasSelf: iri.concat("hasSelf"),
  hasValue: iri.concat("hasValue"),
  imports: iri.concat("imports"),
  incompatibleWith: iri.concat("incompatibleWith"),
  intersectionOf: iri.concat("intersectionOf"),
  inverseOf: iri.concat("inverseOf"),
  maxCardinality: iri.concat("maxCardinality"),
  maxQualifiedCardinality: iri.concat("maxQualifiedCardinality"),
  members: iri.concat("members"),
  minCardinality: iri.concat("minCardinality"),
  minQualifiedCardinality: iri.concat("minQualifiedCardinality"),
  onClass: iri.concat("onClass"),
  onDataRange: iri.concat("onDataRange"),
  onDatatype: iri.concat("onDatatype"),
  onProperties: iri.concat("onProperties"),
  onProperty: iri.concat("onProperty"),
  oneOf: iri.concat("oneOf"),
  priorVersion: iri.concat("priorVersion"),
  propertyChainAxiom: iri.concat("propertyChainAxiom"),
  propertyDisjointWith: iri.concat("propertyDisjointWith"),
  qualifiedCardinality: iri.concat("qualifiedCardinality"),
  sameAs: iri.concat("sameAs"),
  someValuesFrom: iri.concat("someValuesFrom"),
  sourceIndividual: iri.concat("sourceIndividual"),
  targetIndividual: iri.concat("targetIndividual"),
  targetValue: iri.concat("targetValue"),
  topDataProperty: iri.concat("topDataProperty"),
  topObjectProperty: iri.concat("topObjectProperty"),
  unionOf: iri.concat("unionOf"),
  versionIRI: iri.concat("versionIRI"),
  versionInfo: iri.concat("versionInfo"),
  withRestrictions: iri.concat("withRestrictions"),
};
